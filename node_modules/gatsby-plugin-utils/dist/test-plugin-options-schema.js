"use strict";

exports.__esModule = true;
exports.testPluginOptionsSchema = testPluginOptionsSchema;

var _joi = require("./joi");

function testPluginOptionsSchema(pluginSchemaFunction, pluginOptions) {
  var pluginOptionsNames = Object.keys(pluginOptions);
  var pluginSchema = pluginSchemaFunction({
    Joi: _joi.Joi
  });
  var errors = [];
  pluginOptionsNames.forEach(function (pluginOptionName) {
    var partialSchema = pluginSchema.extract(pluginOptionName);

    var _partialSchema$valida = partialSchema.validate(pluginOptions[pluginOptionName], {
      abortEarly: false
    }),
        error = _partialSchema$valida.error;

    if (error) {
      var errorMessage = error.message; // In the case of an array, "value" does not exist in the error message
      // and so we can't replace it with the plugin option name, we have to concat it

      var message = errorMessage.includes("\"value\"") ? errorMessage.replace("\"value\"", "\"" + pluginOptionName + "\"") : "\"" + pluginOptionName + "\" " + errorMessage;
      errors.push(message);
    }
  });
  return {
    isValid: errors.length === 0,
    errors: errors
  };
}